<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	">

	<!-- demo1快速入门开始 -->
	<!-- 通过一个<bean>标签所在类的信息，通过id属性为类起个标识 -->
	<bean id="HelloService" class="day38_spring.demo1.HelloServiceImpl" >
		<!-- 使用property标签来为这个bean注入属性 -->
		<property name="info" value="spring学习" />
	</bean>
	<!-- demo1快速入门结束 -->
	
	<!-- demo2	Bean的实例化 开始-->
	<!-- 默认情况下使用无参数构造方法 -->
	<!-- <bean id="bean1" class="day38_spring.demo2.Bean1" /> -->
	<!-- 静态工厂实例化来实例化bean -->
	<!-- <bean id="bean2" class="day38_spring.demo2.Bean2Factory" factory-method="getBean2" /> -->
	<!-- 实例工厂实例化来实例化bean -->
	<!-- <bean id="bean3Factory" class="day38_spring.demo2.Bean3Factory" /> --><!-- 先实例化bean3Factory -->
	<!-- <bean id="bean3" factory-bean="bean3Factory" factory-method="getBean3" /> -->
	<!-- demo2	Bean的实例化 结束-->
	
	<!-- demo3	Bean的作用范围 开始-->
	<!-- <bean id="customer" scope="prototype" class="day38_spring.demo3.Customer" /> -->
	<!-- bean的生命周期 -->
	<!-- <bean id="product" class="day38_spring.demo3.Product"
		init-method="setup" destroy-method="teardown"	 >
		<property name="name" value="手机" />
		</bean> -->
	<!-- demo3	Bean的作用范围 结束-->
	
	<!-- demo3	Bean的生命周期 开始-->
	<!-- <bean id="customerService" class="day38_spring.demo4.CustomerServiceImpl" 
		init-method="setup"  destroy-method="customerDestroy">
		<property name="customerName" value="aaa" />
	</bean> -->
	<!-- 配置后处理bean -->
	<!-- <bean class="day38_spring.demo4.MyBeanPostProcessor" /> -->
	<!-- demo3	Bean的生命周期 结束-->
	
	<!-- demo5	Bean的属性注入 开始-->
	<bean id="car" class="day38_spring.demo5.Car">
		<!-- constructor-arg是构造方法注入 -->
		<!-- <constructor-arg name="name" value="宝马" />
		<constructor-arg name="price" value="1000000" /> -->
		<constructor-arg index="0" type="java.lang.String" value="奔驰" />
		<constructor-arg index="1" type="java.lang.Double" value="1000000" />
	</bean>
	<!-- <bean id="car2" class="day38_spring.demo5.Car2">
		<property>标签name是属性名称，value是属性值，ref是引用其他对象
		<property name="name" value="奥迪" />
		<property name="price" value="800000" />
	</bean> -->
	<!-- 名称空间注入 -->
	<!-- <bean id="car2" class="day38_spring.demo5.Car2" p:name="雪铁龙" p:price="300000" /> -->
	<!-- SpEL:属性的注入 -->
	<bean id="car2" class="day38_spring.demo5.Car2" >
		<property name="name" value="#{'大众'}" />
		<property name="price" value="#{'200000'}" />
	</bean>
	
	<!-- <bean id="person" class="day38_spring.demo5.Person">
		<property>标签name是属性名称，value是属性值，ref是引用其他对象，其他bean的id或name
		<property name="name" value="小明" />
		<property name="myCar2" ref="car2"  />
	</bean> -->
	<!-- p名称空间注入 -->
	<!-- <bean id="person" class="day38_spring.demo5.Person" p:name="小红" p:myCar2-ref="car2" /> -->
	<!-- SpEL:属性的注入 -->
	<bean id="person" class="day38_spring.demo5.Person">
		<!-- <property name="name" value="#{personInfo.name}" /> -->
		<property name="name" value="#{personInfo.showName()}" />
		<property name="myCar2" value="#{car2}"  />
	</bean>
	
	<bean id="personInfo" class="day38_spring.demo5.PersinInfo" >
		<property name="name" value="小黑" />
	</bean>
	<!-- demo5	Bean的属性注入 结束-->
	<!-- demo6	集合属性的注入 开始-->
	<bean id="collectionBean" class="day38_spring.demo6.CollectionBean">
		<!-- 注入list集合 -->
		<property name="list1">
			<list>
				<!-- 如果是普通值用value，如果是对象用ref -->
				<value>aaa</value>
				<value>bbb</value>
				<value>付费电视</value>
			</list>
		</property>
		<!-- 注入set集合 -->
		<property name="set1">
			<set>
				<value>123</value>
				<value>864</value>
				<value>1585</value>
			</set>
		</property>
		<!-- 注入map集合 -->
		<property name="map1">
			<map>
				<entry key="aaa" value="111" />
				<entry key="bbb" value="1531" />
				<entry key="ccc" value="334" />
			</map>
		</property>
		<!-- 注入properties -->
		<property name="properties1">
			<props>
				<prop key="userName">root</prop>
				<prop key="password">123</prop>
			</props>
		</property>
	</bean>
	<!-- demo6	集合属性的注入 结束-->

</beans>