<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!-- 
mapper代理开发：
	mapper接口的完整类名			==			mapper.xml的namespace
	mapper接口中的方法名			==			mapper.xml中的statement的id
	mapper接口中的方法的参数类型	==			对于id的mapper.xml中的statement的parameterType
	mapper接口中的返回值类型		==			对于id的mapper.xml中的statement的resultType
	
-->
<mapper namespace="day72_mybatis.demo.mapper.UserMapper">
	
	<!-- 根据id查询用户信息 -->
	<select id="findUserById" parameterType="int" resultType="day72_mybatis.demo.eneity.User">
		select * from user where id=#{id};
	</select>
	
	<!-- 根据用户模糊姓名，查询用户信息 -->
	<select id="findUserByName" parameterType="java.lang.String" resultType="day72_mybatis.demo.eneity.User">
		<!-- select * from user where username like #{username} -->
		select * from user where username like '%${value}%'
	</select>
	
	<!-- 添加用户 -->
	<insert id="insertUser" parameterType="day72_mybatis.demo.eneity.User">
		<selectKey keyProperty="id" order="AFTER" resultType="int" >
			select LAST_INSERT_ID()
		</selectKey>
		insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
	</insert>
	
	
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="int">
		delete from user where id=#{id}
	</delete>
	
	<!-- 修改用户 -->
	<update id="updateUser" parameterType="day72_mybatis.demo.eneity.User" >
		update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
	</update>
	
</mapper>