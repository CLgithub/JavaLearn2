<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	">

	<context:component-scan base-package="day39_spring.demo3,day39_spring.demo2" />
	
	<!-- demo4 自动代理 开始  自动代理：基于后处理Bean.在Bean创建的过程中完成的增强，其实demo1就是-->
	<!-- 注册自定义前置增强Advice -->
	<bean id="myBeoreAdvice" class="day39_spring.demo2.MyBeoreAdvice" />
	<!-- 注册自定义环绕增强Advice(通知) -->
	<bean id="myAroundAdvice" class="day39_spring.demo3.MyAroundAdvice" />
	
	<!-- 自动代理：按类名称代理，所有方法，BeanNameAutoProxyCreator -->
	<!-- <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator" >
		对类名为什么的bean增强
		<property name="beanNames" value="*Service" />
		配置使用哪个增强
		<property name="interceptorNames" value="myAroundAdvice" />
	</bean> -->
	
	<!-- 自动代理：默认切面编程，指定方法，DefaultAdvisorAutoProxyCreator -->
	<!-- 定义一个带有切点的切面 -->
	<bean id="myPointcutAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" >
		<property name="pattern" value=".*add.*" />
		<!-- 使用哪个增强 -->
		<property name="advice" ref="myBeoreAdvice" />
	</bean>
	<!-- 自动生成代理 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
	<!-- demo4  自动代理 结束 -->
	
</beans>